{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "debugMode" : true,
    "externalId" : null,
    "firstRuleNodeId" : null,
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "5d4ae740-20c9-11ef-bf4a-3d9f36615f13"
    },
    "name" : "Emelec",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 10,
      "type" : "Success"
    }, {
      "fromIndex" : 1,
      "toIndex" : 10,
      "type" : "Success"
    }, {
      "fromIndex" : 2,
      "toIndex" : 10,
      "type" : "Success"
    }, {
      "fromIndex" : 5,
      "toIndex" : 3,
      "type" : "Post telemetry"
    }, {
      "fromIndex" : 5,
      "toIndex" : 4,
      "type" : "Post attributes"
    }, {
      "fromIndex" : 5,
      "toIndex" : 6,
      "type" : "RPC Request from Device"
    }, {
      "fromIndex" : 5,
      "toIndex" : 7,
      "type" : "Other"
    }, {
      "fromIndex" : 5,
      "toIndex" : 8,
      "type" : "RPC Request to Device"
    }, {
      "fromIndex" : 9,
      "toIndex" : 5,
      "type" : "Success"
    }, {
      "fromIndex" : 10,
      "toIndex" : 9,
      "type" : "Success"
    } ],
    "firstNodeIndex" : null,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 52,
        "layoutY" : 206
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 300,
        "scriptLang" : "TBEL",
        "jsScript" : "var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "tbelScript" : "var msg = {\n    \"water_detector\": Math.random() < 0.5, // Boolean\n    \"lid_switch\": Math.random() < 0.5, // Boolean\n    \"pulse_a\": Math.random() * 1000, // Random number between 0 and 1000\n    \"pulse_b\": Math.random() * 1000, // Random number between 0 and 1000\n    \"pulse_c\": Math.random() * 1000, // Random number between 0 and 1000\n    \"voltage_a\": Math.random() * 100, // Random voltage between 0 and 100\n    \"voltage_b\": Math.random() * 100, // Random voltage between 0 and 100\n    \"voltage_c\": Math.random() * 100, // Random voltage between 0 and 100\n    \"current_a\": Math.random() * 100, // Random current between 0 and 100\n    \"current_b\": Math.random() * 100, // Random current between 0 and 100\n    \"current_c\": Math.random() * 100, // Random current between 0 and 100\n    \"420_ir_a\": Math.random() * 100, // Random value between 0 and 100\n    \"420_ir_b\": Math.random() * 100, // Random value between 0 and 100\n    \"420_ir_c\": Math.random() * 100, // Random value between 0 and 100\n    \"temp\": Math.random() * 40, // Random temperature between 0 and 40\n    \"hum\": Math.random() * 100, // Random humidity between 0 and 100\n    \"pressure\": Math.random() * 1000, // Random pressure between 0 and 1000\n    \"thermocouple_a\": Math.random() * 100, // Random value between 0 and 100\n    \"thermocouple_b\": Math.random() * 100, // Random value between 0 and 100\n    \"thermocouple_c\": Math.random() * 100, // Random value between 0 and 100\n    \"mppt_batary_voltage\": Math.random() * 100, // Random voltage between 0 and 100\n    \"mppt_panel_power\": Math.random() * 1000, // Random power between 0 and 1000\n    \"harvesting_battery_voltage\": Math.random() * 100, // Random voltage between 0 and 100\n    \"harvesting_battery_power\": Math.random() * 1000, // Random power between 0 and 1000\n    \"ipec_pddata_avg_pd_a\": Math.random() * 100, // Random value between 0 and 100\n    \"ipec_pddata_avg_pd_b\": Math.random() * 100, // Random value between 0 and 100\n    \"ipec_pddata_avg_pd_c\": Math.random() * 100 // Random value between 0 and 100\n};\n\nreturn {\n    msg: msg,\n    metadata: {\n        deviceType: \"default\"\n    },\n    msgType: \"POST_TELEMETRY_REQUEST\"\n};\n",
        "originatorId" : "cea3e0e0-20c4-11ef-bf4a-3d9f36615f13",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c3139da0-20ca-11ef-bf4a-3d9f36615f13"
      },
      "name" : "generator",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 51,
        "layoutY" : 315
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 300,
        "scriptLang" : "TBEL",
        "jsScript" : "var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "tbelScript" : "var msg = {\n    \"water_detector\": Math.random() < 0.5, // Boolean\n    \"lid_switch\": Math.random() < 0.5, // Boolean\n    \"pulse_a\": Math.random() * 1000, // Random number between 0 and 1000\n    \"pulse_b\": Math.random() * 1000, // Random number between 0 and 1000\n    \"pulse_c\": Math.random() * 1000, // Random number between 0 and 1000\n    \"voltage_a\": Math.random() * 100, // Random voltage between 0 and 100\n    \"voltage_b\": Math.random() * 100, // Random voltage between 0 and 100\n    \"voltage_c\": Math.random() * 100, // Random voltage between 0 and 100\n    \"current_a\": Math.random() * 100, // Random current between 0 and 100\n    \"current_b\": Math.random() * 100, // Random current between 0 and 100\n    \"current_c\": Math.random() * 100, // Random current between 0 and 100\n    \"420_ir_a\": Math.random() * 100, // Random value between 0 and 100\n    \"420_ir_b\": Math.random() * 100, // Random value between 0 and 100\n    \"420_ir_c\": Math.random() * 100, // Random value between 0 and 100\n    \"temp\": Math.random() * 40, // Random temperature between 0 and 40\n    \"hum\": Math.random() * 100, // Random humidity between 0 and 100\n    \"pressure\": Math.random() * 1000, // Random pressure between 0 and 1000\n    \"thermocouple_a\": Math.random() * 100, // Random value between 0 and 100\n    \"thermocouple_b\": Math.random() * 100, // Random value between 0 and 100\n    \"thermocouple_c\": Math.random() * 100, // Random value between 0 and 100\n    \"mppt_batary_voltage\": Math.random() * 100, // Random voltage between 0 and 100\n    \"mppt_panel_power\": Math.random() * 1000, // Random power between 0 and 1000\n    \"harvesting_battery_voltage\": Math.random() * 100, // Random voltage between 0 and 100\n    \"harvesting_battery_power\": Math.random() * 1000, // Random power between 0 and 1000\n    \"ipec_pddata_avg_pd_a\": Math.random() * 100, // Random value between 0 and 100\n    \"ipec_pddata_avg_pd_b\": Math.random() * 100, // Random value between 0 and 100\n    \"ipec_pddata_avg_pd_c\": Math.random() * 100 // Random value between 0 and 100\n};\n\nreturn {\n    msg: msg,\n    metadata: {\n        deviceType: \"default\"\n    },\n    msgType: \"POST_TELEMETRY_REQUEST\"\n};\n",
        "originatorId" : "e17e14b0-20c4-11ef-bf4a-3d9f36615f13",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c31460f0-20ca-11ef-bf4a-3d9f36615f13"
      },
      "name" : "generator",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 52,
        "layoutY" : 261
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 300,
        "scriptLang" : "TBEL",
        "jsScript" : "var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "tbelScript" : "var msg = {\n    \"water_detector\": Math.random() < 0.5, // Boolean\n    \"lid_switch\": Math.random() < 0.5, // Boolean\n    \"pulse_a\": Math.random() * 1000, // Random number between 0 and 1000\n    \"pulse_b\": Math.random() * 1000, // Random number between 0 and 1000\n    \"pulse_c\": Math.random() * 1000, // Random number between 0 and 1000\n    \"voltage_a\": Math.random() * 100, // Random voltage between 0 and 100\n    \"voltage_b\": Math.random() * 100, // Random voltage between 0 and 100\n    \"voltage_c\": Math.random() * 100, // Random voltage between 0 and 100\n    \"current_a\": Math.random() * 100, // Random current between 0 and 100\n    \"current_b\": Math.random() * 100, // Random current between 0 and 100\n    \"current_c\": Math.random() * 100, // Random current between 0 and 100\n    \"420_ir_a\": Math.random() * 100, // Random value between 0 and 100\n    \"420_ir_b\": Math.random() * 100, // Random value between 0 and 100\n    \"420_ir_c\": Math.random() * 100, // Random value between 0 and 100\n    \"temp\": Math.random() * 40, // Random temperature between 0 and 40\n    \"hum\": Math.random() * 100, // Random humidity between 0 and 100\n    \"pressure\": Math.random() * 1000, // Random pressure between 0 and 1000\n    \"thermocouple_a\": Math.random() * 100, // Random value between 0 and 100\n    \"thermocouple_b\": Math.random() * 100, // Random value between 0 and 100\n    \"thermocouple_c\": Math.random() * 100, // Random value between 0 and 100\n    \"mppt_batary_voltage\": Math.random() * 100, // Random voltage between 0 and 100\n    \"mppt_panel_power\": Math.random() * 1000, // Random power between 0 and 1000\n    \"harvesting_battery_voltage\": Math.random() * 100, // Random voltage between 0 and 100\n    \"harvesting_battery_power\": Math.random() * 1000, // Random power between 0 and 1000\n    \"ipec_pddata_avg_pd_a\": Math.random() * 100, // Random value between 0 and 100\n    \"ipec_pddata_avg_pd_b\": Math.random() * 100, // Random value between 0 and 100\n    \"ipec_pddata_avg_pd_c\": Math.random() * 100 // Random value between 0 and 100\n};\n\nreturn {\n    msg: msg,\n    metadata: {\n        deviceType: \"default\"\n    },\n    msgType: \"POST_TELEMETRY_REQUEST\"\n};\n",
        "originatorId" : "d91e3890-20c4-11ef-bf4a-3d9f36615f13",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c3148800-20ca-11ef-bf4a-3d9f36615f13"
      },
      "name" : "generator",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1116,
        "layoutY" : 78
      },
      "configuration" : {
        "defaultTTL" : 0
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb862d0-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "Save Timeseries",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1113,
        "layoutY" : 21
      },
      "configuration" : {
        "scope" : "CLIENT_SCOPE",
        "notifyDevice" : false,
        "sendAttributesUpdatedNotification" : false,
        "updateAttributesOnlyOnValueChange" : true
      },
      "configurationVersion" : 2,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb889e0-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "Save Client Attributes",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 714,
        "layoutY" : 169
      },
      "configuration" : {
        "version" : 0
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb889e1-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "Message Type Switch",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1117,
        "layoutY" : 133
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb8b0f0-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "Log RPC from Device",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1117,
        "layoutY" : 186
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb8d800-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "Log Other",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1120,
        "layoutY" : 238
      },
      "configuration" : {
        "timeoutInSeconds" : 60
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb8ff10-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "RPC Call Request",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode"
    }, {
      "additionalInfo" : {
        "description" : "Process incoming messages from devices with the alarm rules defined in the device profile. Dispatch all incoming messages with \"Success\" relation type.",
        "layoutX" : 374,
        "layoutY" : 165
      },
      "configuration" : {
        "persistAlarmRulesState" : false,
        "fetchAlarmRulesStateOnStart" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb8ff11-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "Device Profile Node",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.profile.TbDeviceProfileNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 304,
        "layoutY" : 309
      },
      "configuration" : {
        "version" : 0
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9bb92620-20d5-11ef-bf4a-3d9f36615f13"
      },
      "name" : "checkpoint",
      "queueName" : "Main",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbCheckpointNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}