{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "debugMode" : false,
    "externalId" : null,
    "firstRuleNodeId" : null,
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "31b003d0-1166-11ef-bf4a-3d9f36615f13"
    },
    "name" : "Sim - Smart Office",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 3,
      "type" : "Success"
    }, {
      "fromIndex" : 1,
      "toIndex" : 3,
      "type" : "Success"
    }, {
      "fromIndex" : 2,
      "toIndex" : 3,
      "type" : "Success"
    } ],
    "firstNodeIndex" : null,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 141,
        "layoutY" : 280
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 9,
        "scriptLang" : "JS",
        "jsScript" : "var airFlow = Math.random() * (500 - 100) + 100; // Random air flow between 100 and 500\nvar targetTemperature = Math.random() * (30 - 15) + 15; // Random target temperature between 15 and 30\nvar enabled = Math.random() < 0.5; // Random boolean value for enabled\n\nreturn {\n    msg: {\n        airFlow: parseFloat(airFlow.toFixed(1)), // Round to 1 decimal place\n        targetTemperature: parseFloat(targetTemperature.toFixed(1)), // Round to 1 decimal place\n        enabled: enabled\n    },\n    metadata: {\n        deviceType: \"hvac_simulator\"\n    },\n    msgType: \"POST_TELEMETRY_REQUEST\"\n};\n",
        "tbelScript" : null,
        "originatorId" : "467b8f20-109c-11ef-bf4a-3d9f36615f13",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "3b618d40-1166-11ef-bf4a-3d9f36615f13"
      },
      "name" : "HVAC",
      "queueName" : "Main",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 143,
        "layoutY" : 330
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 9,
        "scriptLang" : "JS",
        "jsScript" : "var voltage = Math.random() * (250 - 200) + 200; // Random voltage between 200 and 250\nvar frequency = Math.random() * (70 - 50) + 50; // Random frequency between 50 and 70\nvar amperage = Math.random() * (20 - 10) + 10; // Random amperage between 10 and 20\nvar power = Math.random() * (4000 - 2000) + 2000; // Random power between 2000 and 4000\nvar energy = Math.random() * 500; // Random energy between 0 and 500\n\nreturn {\n    msg: {\n        voltage: parseFloat(voltage.toFixed(1)), // Round to 1 decimal place\n        frequency: parseFloat(frequency.toFixed(1)), // Round to 1 decimal place\n        amperage: parseFloat(amperage.toFixed(1)), // Round to 1 decimal place\n        power: parseFloat(power.toFixed(1)), // Round to 1 decimal place\n        energy: parseFloat(energy.toFixed(1)) // Round to 1 decimal place\n    },\n    metadata: {\n        deviceType: \"energy_meter_simulator\"\n    },\n    msgType: \"POST_TELEMETRY_REQUEST\"\n};\n",
        "tbelScript" : null,
        "originatorId" : "46809830-109c-11ef-bf4a-3d9f36615f13",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "3b61db60-1166-11ef-bf4a-3d9f36615f13"
      },
      "name" : "EA",
      "queueName" : "Main",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 144,
        "layoutY" : 384
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 9,
        "scriptLang" : "JS",
        "jsScript" : "var water = Math.random() * 5; // Random water consumption between 0 and 5\nvar voltage = Math.random() * 5; // Random voltage between 0 and 5\n\nreturn {\n    msg: {\n        water: parseFloat(water.toFixed(1)), // Round to 1 decimal place\n        voltage: parseFloat(voltage.toFixed(1)) // Round to 1 decimal place\n    },\n    metadata: {\n        deviceType: \"water_meter_simulator\"\n    },\n    msgType: \"POST_TELEMETRY_REQUEST\"\n};\n",
        "tbelScript" : null,
        "originatorId" : "46807120-109c-11ef-bf4a-3d9f36615f13",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "3b620270-1166-11ef-bf4a-3d9f36615f13"
      },
      "name" : "water",
      "queueName" : "Main",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 457,
        "layoutY" : 323
      },
      "configuration" : {
        "version" : 0
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "3b622980-1166-11ef-bf4a-3d9f36615f13"
      },
      "name" : "message type switch",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 144,
        "layoutY" : 434
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 9,
        "scriptLang" : "JS",
        "jsScript" : "var co2 = Math.random() * 1000; // Random CO2 level between 0 and 1000\nvar tvoc = Math.random() * 1; // Random TVOC level between 0 and 1\nvar temperature = Math.random() * (30 - 10) + 10; // Random temperature between 10 and 30\nvar humidity = Math.random() * 100; // Random humidity level between 0 and 100\nvar occupancy = Math.random() < 0.5; // Random boolean value for occupancy\n\nreturn {\n    msg: {\n        co2: parseFloat(co2.toFixed(1)), // Round to 1 decimal place\n        tvoc: parseFloat(tvoc.toFixed(1)), // Round to 1 decimal place\n        temperature: parseFloat(temperature.toFixed(1)), // Round to 1 decimal place\n        humidity: parseFloat(humidity.toFixed(1)), // Round to 1 decimal place\n        occupancy: occupancy\n    },\n    metadata: {\n        deviceType: \"smart_sensor_simulator\"\n    },\n    msgType: \"POST_TELEMETRY_REQUEST\"\n};\n",
        "tbelScript" : null,
        "originatorId" : "467bdd40-109c-11ef-bf4a-3d9f36615f13",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "5d23ac10-1166-11ef-bf4a-3d9f36615f13"
      },
      "name" : "smart sensor",
      "queueName" : "Main",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}